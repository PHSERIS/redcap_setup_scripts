# Setup the servers in the balancer queue
    upstream redcap {
        # Hash the full IP address in order to ensure that session stickyness/persistence
        hash $remote_addr;
 
        server SERVER1 max_fails=3 fail_timeout=30s;
        server SERVER2 max_fails=3 fail_timeout=30s;
    }
     
    ### API Upstream
    #upstream redcapapi {
    #    hash $remote_addr;
    #
    #    server server1.example.com max_fails=3 fail_timeout=30s;
    #    server server2.example.com weight=5 max_fails=3 fail_timeout=30s;
    #}
 
   server {
        listen 80;
 
        server_name redcapserver.example.com;
 
        # Route the API requests to a different load balancer upstream
        #location ^~ /redcap/api/ {
        #    proxy_pass http://redcapapi;
        #}
 
       # Load balance the entire thing starting with root
        location / {
            proxy_pass http://redcap;
        }
    }
 
    server {
        listen 443 ssl;
 
        server_name redcapserver.example.com;
 
        # SSL Certs, ciphers, etc
        ssl on;
        ssl_certificate         /etc/pki/tls/certs/localhost.crt;
        ssl_certificate_key     /etc/pki/tls/private/localhost.key;
        #ssl_trusted_certificate /etc/nginx/ssl/example.com/ca-certs.pem;
 
        # Route the API requests to a different load balancer upstream
        #location ^~ /redcap/api/ {
        #    proxy_pass http://redcapapi;
        #}
 
        # Load balance the entire thing starting with root
        location / {
            proxy_pass http://redcap;
        }
    }